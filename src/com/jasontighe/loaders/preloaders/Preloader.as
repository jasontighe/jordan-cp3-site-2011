package com.jasontighe.loaders.preloaders{	import com.jasontighe.loaders.preloaders.IPreloadee;	import com.jasontighe.loaders.preloaders.IPreloader;	import com.jasontighe.loaders.visuals.ILoaderVisual;		import flash.display.DisplayObject;	import flash.display.Loader;	import flash.display.LoaderInfo;	import flash.display.Sprite;	import flash.display.StageAlign;	import flash.display.StageQuality;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.events.ProgressEvent;	import flash.net.URLRequest;		public class Preloader extends Sprite implements IPreloader	{		protected static var _instance : IPreloader;		protected var _preloadee : IPreloadee;		protected var _preloaderVisual : ILoaderVisual;		public function Preloader ()		{							if ( _instance ) throw new Error( "only one Preloader class can exist" );							_instance = this;						initStage( );						addEventListener( Event.ADDED_TO_STAGE, onAddedToStage );		}		/**		 * 		 * interface		 * 		 */		public static function getInstance ( ) : IPreloader		{			return _instance;			}		public function getPreloaderVisual ( ) : ILoaderVisual		{				return _preloaderVisual;		}		public function removePreloaderVisual ( ) : void		{				if ( _preloaderVisual )			{				removeChild( Sprite( _preloaderVisual ) );				_preloaderVisual = null;			}		}		/**		 * 		 * protected methods		 * 		 */		protected function initStage () : void		{						stage.align = StageAlign.TOP_LEFT;			stage.quality = StageQuality.BEST;			stage.scaleMode = StageScaleMode.NO_SCALE;		}		protected function loadPreloaderVisual () : void		{						var url : String = loaderInfo.parameters.preloaderVisual || "flash/swf/preloader-visual.swf";			var loader : Loader = new Loader( );			loader.contentLoaderInfo.addEventListener( Event.COMPLETE, onPreloaderVisualLoadComplete );			loader.load( new URLRequest( url ) );		}		protected function loadMain () : void		{									var url : String = loaderInfo.parameters.main || "flash/swf/main.swf";			var loader : Loader = new Loader( );			loader.contentLoaderInfo.addEventListener( Event.COMPLETE, onMainLoadComplete );			loader.contentLoaderInfo.addEventListener( ProgressEvent.PROGRESS, onMainLoadProgress );			loader.load( new URLRequest( url ) );		}		protected function addPreloaderVisual ( l : ILoaderVisual ) : void		{				_preloaderVisual = l;						addChildAt( _preloaderVisual as Sprite, 1 );		}		/**		 * 		 * events		 * 		 */		protected function onAddedToStage ( e : Event ) : void		{			removeEventListener( Event.ADDED_TO_STAGE, onAddedToStage );		}		protected function onPreloaderVisualLoadComplete ( e : Event ) : void		{					LoaderInfo( e.target ).loader.contentLoaderInfo.removeEventListener( Event.COMPLETE, onPreloaderVisualLoadComplete );						addPreloaderVisual( LoaderInfo( e.target ).content as ILoaderVisual );						loadMain( );		}		protected function onMainLoadProgress ( e : ProgressEvent ) : void		{			var progress : Number = ( e.bytesLoaded / e.bytesTotal ) * .5;						_preloaderVisual.update( progress );		}		protected function onMainLoadComplete ( e : Event ) : void		{				LoaderInfo( e.target ).loader.contentLoaderInfo.removeEventListener( Event.COMPLETE, onMainLoadComplete );						_preloadee = IPreloadee( LoaderInfo( e.target ).loader.content );						addChildAt( _preloadee as Sprite, 1 );		}	}}