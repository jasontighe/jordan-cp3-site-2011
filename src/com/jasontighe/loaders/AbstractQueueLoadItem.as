package com.jasontighe.loaders{	import flash.errors.IOError;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.IOErrorEvent;	import flash.events.ProgressEvent;	import flash.net.URLRequest;	import com.jasontighe.loaders.events.QueueLoadItemEvent;		public class AbstractQueueLoadItem extends EventDispatcher implements IQueueLoadItem	{		protected var _url:String;		protected var _loadItem:*;		protected var _loadListener:*;		protected var _context:*;		public function AbstractQueueLoadItem( url:String )		{			_url = url;		}		/*		 * 		 * interface		 * 		 */		public function load():void		{						if ( isValidUrl( ) )			{							addListeners( );							_loadItem.load( new URLRequest( _url ), _context );			}							}			public function remove():void		{				_context = null;						removeListeners( ); 			cancelLoadOperation( );		}		/*		 * 		 * protected function		 * 		 */		protected function addListeners():void		{					var loadListener:EventDispatcher = _loadListener as EventDispatcher;			loadListener.addEventListener( IOErrorEvent.IO_ERROR, onQueueLoadItemIOError );			loadListener.addEventListener( ProgressEvent.PROGRESS, onQueueLoadItemProgress );			loadListener.addEventListener( Event.COMPLETE, onQueueLoadItemComplete );						loadListener.addEventListener( Event.INIT, onQueueLoadItemInit );					}		protected function removeListeners():void		{									if ( _loadListener ) 			{ 								var loadListener:EventDispatcher = _loadListener as EventDispatcher;				loadListener.removeEventListener( IOErrorEvent.IO_ERROR, onQueueLoadItemIOError );				loadListener.removeEventListener( ProgressEvent.PROGRESS, onQueueLoadItemProgress );				loadListener.removeEventListener( Event.COMPLETE, onQueueLoadItemComplete );							loadListener.removeEventListener( Event.INIT, onQueueLoadItemInit );					_loadListener = null;			}				}		private function cancelLoadOperation():void		{			if ( _loadItem )			{				try				{					_loadItem.close( );				}				catch ( error:IOError )				{//					Logger.console( error.message );					}								_loadItem = null;			}		}		protected function isValidUrl():Boolean		{			var isValid:Boolean;						if ( Boolean( _url ) )			{				isValid = true;				dispatchEvent( new QueueLoadItemEvent( QueueLoadItemEvent.QUEUE_LOAD_ITEM_START ) );								}			else			{				trace("AbstractQueueLoadItem: invalid url");				dispatchEvent( new QueueLoadItemEvent( QueueLoadItemEvent.QUEUE_LOAD_ITEM_IO_ERROR ) );				dispatchEvent( new QueueLoadItemEvent( QueueLoadItemEvent.QUEUE_LOAD_ITEM_REMOVE ) );			}							return isValid;				}		/*		 * 		 * getters/setters		 * 		 */		public function getUrl():String		{			return _url;		}		public function getLoadItem():*		{			return _loadItem;		}		public function setContext( value:* ):void		{			_context = value;		}		/*		 * 		 * event handlers		 * 		 */		protected function onQueueLoadItemIOError( e:IOErrorEvent ):void		{			trace("AbstractQueueLoadItem: "+e);										dispatchEvent( new QueueLoadItemEvent( QueueLoadItemEvent.QUEUE_LOAD_ITEM_IO_ERROR, true, false, _loadItem ) );			dispatchEvent( new QueueLoadItemEvent( QueueLoadItemEvent.QUEUE_LOAD_ITEM_REMOVE ) );		}			protected function onQueueLoadItemProgress( event:ProgressEvent ):void		{			var bl:uint = _loadListener.bytesLoaded;			var bt:uint = _loadListener.bytesTotal;						dispatchEvent( new QueueLoadItemEvent( QueueLoadItemEvent.QUEUE_LOAD_ITEM_PROGRESS, false, false, _loadItem, bl, bt ) );		}		protected function onQueueLoadItemComplete( event:Event ):void		{					var bl:uint = _loadListener.bytesLoaded;			var bt:uint = _loadListener.bytesTotal;						dispatchEvent( new QueueLoadItemEvent( QueueLoadItemEvent.QUEUE_LOAD_ITEM_COMPLETE, false, false, _loadItem, bl, bt ) );			dispatchEvent( new QueueLoadItemEvent( QueueLoadItemEvent.QUEUE_LOAD_ITEM_REMOVE ) );		}				protected function onQueueLoadItemInit( event:Event ):void		{					dispatchEvent( new QueueLoadItemEvent( QueueLoadItemEvent.QUEUE_LOAD_ITEM_INIT, false, false, _loadItem ) );		}	}}