package com.jasontighe.loggers.targets {	import flash.external.ExternalInterface;	import flash.system.Capabilities;		import com.jasontighe.loggers.LevelObject;	import com.jasontighe.loggers.TargetCreator;	import com.jasontighe.loggers.targets.ILoggerTarget;		/**	 * <p>Allows logging to the firebug web console. Also works with the Safari developer error console.</p>	 * 	 * @author Ronnie Liew, Antti Kupila	 */	// TODO: As this works with Safari too, the name probably should be changed?	public class ConsoleTarget extends AbstractLoggerTarget implements ILoggerTarget 	{		//---------------------------------------------------------------------		//		//  Constants		//		//---------------------------------------------------------------------		//---------------------------------------------------------------------		//		//  Constructor		//		//---------------------------------------------------------------------				public function ConsoleTarget() 		{			// Do nothing		}		//---------------------------------------------------------------------		//		//  Public Methods		//		//---------------------------------------------------------------------						/**		 * <p>Published a log item in the console. If this is not possible it automatically falls back to a basic trace</p>		 */		override public function publish(levelObject:LevelObject, obj:*):void 		{			if ( checkLevel( levelObject ) ) return;			if ( checkFilter( obj ) ) return;			obj = checkFormat( obj );			if ( ExternalInterface.available && Capabilities.playerType == "PlugIn" )				ExternalInterface.call( "console." + levelObject.map, ( obj.toString == null ) ? obj : obj.toString( ) );			else trace( levelObject.level.toUpperCase( ) + " : " + obj ); // better than nothing .. 		}		override public function get id():String 		{				return TargetCreator.CONSOLE;		}	}}