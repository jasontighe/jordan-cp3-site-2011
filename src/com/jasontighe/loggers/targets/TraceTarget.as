package com.jasontighe.loggers.targets {	import com.jasontighe.loggers.LevelObject;	import com.jasontighe.loggers.TargetCreator;		/**     * <p>Simple trace target, same as using trace( "something" ); but writes out the level and allows everything to go through one centralized logger so that the target or mode can be changed later on.</p>	 * <p>trace() should not be used</p>	 * 	 * @author Ronnie Liew	 */	public class TraceTarget extends AbstractLoggerTarget implements ILoggerTarget {		//---------------------------------------------------------------------		//		//  Constructor		//		//---------------------------------------------------------------------		public function TraceTarget( ) {			super( );		}				//---------------------------------------------------------------------		//		//  Public methods		//		//---------------------------------------------------------------------				/**		 * <p>Publishes a message in the trace output</p>		 * <p>The level is automatically prepended to the message</p>		 */		override public function publish( levelObject : LevelObject, obj : * ) : void {			if ( !obj ) obj = "null";			if ( checkLevel( levelObject ) ) return;			if ( checkFilter( obj ) ) return;			obj = checkFormat( obj );			trace( levelObject.level.toUpperCase() + " : " + obj );		}						override public function get id() : String {					return TargetCreator.TRACE;				        }            }    }