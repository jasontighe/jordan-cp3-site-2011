package com.jasontighe.loggers.targets {	import flash.events.StatusEvent;	import flash.net.LocalConnection;		import com.jasontighe.loggers.LevelObject;	import com.jasontighe.loggers.Logger;	import com.jasontighe.loggers.TargetCreator;	import com.jasontighe.loggers.targets.ILoggerTarget;		public class LocalConnectionTarget extends AbstractLoggerTarget implements ILoggerTarget 	{		private var _localConnection:LocalConnection = new LocalConnection( );		private var _message:String;		//---------------------------------------------------------------------		//		//  Constructor		//		//---------------------------------------------------------------------				public function LocalConnectionTarget() 		{			// Do nothing		}		//---------------------------------------------------------------------		//		//  Public Methods		//		//---------------------------------------------------------------------						/**		 * <p>Published a log item in the local connection target. If this is not possible it automatically falls back to a basic trace</p>		 */		override public function publish(levelObject:LevelObject, obj:*):void 		{			if ( checkLevel( levelObject ) ) return;			if ( checkFilter( obj ) ) return;			obj = checkFormat( obj );			_message = levelObject.level.toUpperCase( ) + " : " + obj.toString( );			_localConnection.addEventListener( StatusEvent.STATUS, onStatus );			_localConnection.send( Logger.connectionName, "publish", _message );		}		override public function get id():String 		{			return TargetCreator.LOCAL_CONNECTION;		}		//---------------------------------------------------------------------		//		//  Events		//		//---------------------------------------------------------------------				private function onStatus( e:StatusEvent ):void 		{			switch ( e.level ) 			{				case "status"://					trace( "LocalConnection.send() succeeded" );					break;				case "error":					trace( _message ); // better than nothing .. 					break;			}		}	}}