package com.jasontighe.media.objects {	import flash.utils.getTimer;		public class AbstractMediaObjectProgressive extends AbstractMediaObject implements IMediaObjectProgressive	{		protected var _media:IMediaObjectProgressive;		protected var _bytesLoaded:Number;		protected var _bytesTotal:Number;				protected var _loadTimeCurrent:Number = 0;		protected var _loadTimeStart:Number;		public function AbstractMediaObjectProgressive( url:String )		{			super( url );		}		override public function init( ):void		{						_loadTimeStart = getTimer( );		}		public function get bytesLoaded():Number		{			return _bytesLoaded;		}		public function get bytesTotal():Number		{			return _bytesTotal;		}		public function get loadTimeElapsed():Number		{						if ( bytesLoaded != bytesTotal ) 			{ 				_loadTimeCurrent = getTimer( ); 			}			//			trace( '_loadTimeCurrent > ' + _loadTimeCurrent );			//			trace( '_loadTimeStart > ' + _loadTimeStart );			return _loadTimeCurrent - _loadTimeStart;		}		public function get loadTimeRemaining():Number		{			var bytesPerSecond:Number = bytesLoaded / loadTimeElapsed;			var bytesRemaining:Number = bytesTotal - bytesLoaded;			//			trace( 'bytesLoaded > ' + bytesLoaded );			//			trace( 'bytesTotal > ' + bytesTotal );			//			trace( 'bytesPerSecond > ' + bytesPerSecond );			//			trace( 'bytesRemaining > ' + bytesRemaining );			//			trace( 'loadTimeElapsed > ' + loadTimeElapsed );			return ( ( bytesRemaining / bytesPerSecond ) / 1000 ) - bufferTime;		}					public function get media( ):IMediaObjectProgressive		{			return _media;		}	}}